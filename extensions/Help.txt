Чтобы добавить исполняемый код в вайпалку, нужно создать perl-модуль (.pm) в /extensions и подключить
модуль Piston::Extensions (libs/Piston/Extensions.pm). Затем вызвать функцию extension().

Пример файла:

   use srict;
   use Piston::Extensions;

   extension(
      if   => sub,     # Это расширение будет загружено только в случае выполнения условия.
      name => $string, # Имя (описание) расширения.
      prio => $int,    # Приоритет исполнения. 0 - низший.

      init => \&func1, # Код, выполняемый во время инициализации.
      main => \&func2, # Код, выполняемый в основном потоке.
   );

   sub func1 { ... }
   sub func2 { ... }

   1;

Позиции, в которых может исполняться код расширений:
init - начало работы вайпалки
main - в основном потоке, выполняется каждые 2 секунды
exit - при завершении
before_captcha_request, after_captcha_request - перед и после запроса капчи
before_post_request, after_post_request - перед и после отправки поста

Некоторые глобальные переменные (нужно добавить префикс Piston:: для доступа к ним):
%{ $shared }  - сюда можно записывать любые данные, получать к ним доступ из других расширений.
   В частости, в %{ $shared->{catalog} } содержится постоянно обновляемый список тредов из каталога
   в формате (тред => количество постов).
@proxies  - текущий список прокси
@threads  - текущий список целевых тредов
@_threads - список тредов из конфига (не изменяется)
$last_thread - индекс массива @threads с тредом, в который был отправлен последний пост

Некоторые функции (аналогичный префикс Piston:: для доступа):
delete_proxy($proxy) - удалить указанную прокси из списка (@proxies)
delete_thread($thread_id)   - удалить указанный тред из списка (@threads)
sleep_this_thread($seconds) - остановить текущий поток
kill_this_thread() - убить текущий поток

Для дополнительной информации см. существующие расширения.
